git init (first create a project folder. Git bash there. Then for initializing the project, write the command)

git status

git add filename

git commit -m "message"

git remote add origin github repo path

git push origin master (yuo can also use git push -u origin master to remember the parameters. by doing this next time you just need to write git push )

git pull origin master  (this is for pulling your project from github repo to your project folder)

git clone github repo path   (useful when you clone your project from github repo to any other local computer)


---------------------------------------------------------------------------------------------------------------------

Also, learn more from Try git tutorial.

some commands are:

git diff HEAD (To see the changes others made in different project files)

git diff --staged (option to see the changes you just staged.)

Resetting the Stage:
commnad: git reset filename



some useful git commands:

git branch
To create a git branch :

git checkout -b name_of_the_branch

after creating new brabch, to switch to that branch or any other branch:

git checkout branch_name

how to clone unmerged branch to local:

git clone branch_link -b branch_name

example:

git clone https://github.com/StetSolutions/glyph-1-front-end.git -b feature/users-add-pagination


To see all the branches:

git branch -a

To see the log:

git log


some most useful git commands:
----------------------------------



If you want to create a branch locally from git repo branch

For example; create a develop branch from github repo develop branch

First see

Git branch -al (you will see all the branch)

Now create:

E.g: git checkout -b develop remotes/origin/develop


Moving to another branch

Git checkout branchname

If you want to move to the develop branch
E.g: git checkout develop 

To see if the branch locally (in your computer is up to date)

Git pull -a



Once you have an upto date branch (e.g. develop branch) and you want to create a new branch for a new task:

First check you are in hte correct branch

Git branch (it will show all the branch)

If yu are in the correct branch check if it is upto date by

Git pull -a

Lastly create the branch

Git chekcout -b newbranch name

Git checkout -b ‘feature/modify-user’


